services:
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: dev
    working_dir: /app
    command: [ "npm", "run", "start:dev"]
    env_file: .env
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - REDIS_HOST=redis
    ports:
      - 3000:3000
    volumes:
      - ./:/app:cached
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /data/postgres
    ports:
      - "${DB_PORT}:${DB_PORT}"
    expose:
      - ${DB_PORT}
    volumes:
      - jm-data:/data/postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "db", "-p", "${DB_PORT}", "-d", "${DB_NAME}", "-U", "${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    
  redis:
    image: redis:7.0-alpine
    container_name: cache
    ports:
      - 6379:6379
    volumes:
      - jm-redis:/data

volumes:
  jm-data:
  jm-redis: